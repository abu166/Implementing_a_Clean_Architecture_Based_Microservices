version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ecommerce-db
    environment:
      POSTGRES_USER: abukhassymkhydyrbayev
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  # Inventory Service
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: abukhassymkhydyrbayev
      DB_PASSWORD: admin
      DB_NAME: ecommerce
    ports:
      - "8081:8081"
    depends_on:
      - db
    networks:
      - ecommerce-network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: abukhassymkhydyrbayev
      DB_PASSWORD: admin
      DB_NAME: ecommerce
    ports:
      - "8082:8082"
    depends_on:
      - db
    networks:
      - ecommerce-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      INVENTORY_SERVICE_URL: http://inventory-service:8081
      ORDER_SERVICE_URL: http://order-service:8082
    ports:
      - "8080:8080"
    depends_on:
      - inventory-service
      - order-service
    networks:
      - ecommerce-network

# Define the network for communication between services
networks:
  ecommerce-network:
    driver: bridge

# Define the volume for PostgreSQL data persistence
volumes:
  postgres_data: